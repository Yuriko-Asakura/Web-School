# Generated by Django 5.1.6 on 2025-02-10 15:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complexity',
            fields=[
                ('ID_Complexity', models.AutoField(primary_key=True, serialize=False)),
                ('ComplexityName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('ID_Level', models.AutoField(primary_key=True, serialize=False)),
                ('LevelName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Predmet',
            fields=[
                ('ID_Predmet', models.AutoField(primary_key=True, serialize=False)),
                ('PredmetName', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTypes',
            fields=[
                ('ID_QuestionType', models.AutoField(primary_key=True, serialize=False)),
                ('TypeName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('ID_Role', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('ID_Course', models.AutoField(primary_key=True, serialize=False)),
                ('Description', models.CharField(max_length=50000)),
                ('CourseName', models.CharField(max_length=500)),
                ('IsBlocked', models.BooleanField(default=False)),
                ('IsSubscribed', models.BooleanField(default=False)),
                ('Predmet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.predmet')),
            ],
        ),
        migrations.CreateModel(
            name='Tests',
            fields=[
                ('ID_Test', models.AutoField(primary_key=True, serialize=False)),
                ('TestName', models.CharField(max_length=100)),
                ('Description', models.TextField()),
                ('ID_Complexity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.complexity')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('ID_Question', models.AutoField(primary_key=True, serialize=False)),
                ('QuestionText', models.TextField()),
                ('correct_answer', models.TextField()),
                ('wrong_answer', models.TextField()),
                ('ID_QuestionType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.questiontypes')),
                ('ID_Test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.tests')),
            ],
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('ID_Topic', models.AutoField(primary_key=True, serialize=False)),
                ('TopicName', models.CharField(max_length=100)),
                ('ID_Course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.courses')),
            ],
        ),
        migrations.AddField(
            model_name='tests',
            name='ID_Topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.topics'),
        ),
        migrations.CreateModel(
            name='Lectures',
            fields=[
                ('ID_Lecture', models.AutoField(primary_key=True, serialize=False)),
                ('Title', models.CharField(max_length=255)),
                ('Content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ID_Topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.topics')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('image', models.BinaryField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.roles')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='ID_User',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_web.user'),
        ),
        migrations.CreateModel(
            name='UserTests',
            fields=[
                ('ID_UserTests', models.AutoField(primary_key=True, serialize=False)),
                ('ID_Course', models.IntegerField()),
                ('ID_Topic', models.IntegerField()),
                ('ID_Test', models.IntegerField()),
                ('TestName', models.CharField(max_length=100)),
                ('Result', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('Grade', models.CharField(blank=True, max_length=1, null=True)),
                ('DateTaken', models.DateTimeField()),
                ('ID_User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.user')),
            ],
        ),
        migrations.CreateModel(
            name='TopicTests',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_Test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.tests')),
                ('ID_Topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.topics')),
            ],
            options={
                'unique_together': {('ID_Topic', 'ID_Test')},
            },
        ),
        migrations.CreateModel(
            name='UserCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_Course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.courses')),
                ('ID_User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_web.user')),
            ],
            options={
                'unique_together': {('ID_User', 'ID_Course')},
            },
        ),
    ]
